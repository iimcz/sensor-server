syntax = "proto3";
package naki3d.common.protocol;

import "google/protobuf/empty.proto";

service ManagementService 
{
    // Shuts the entire emt_sdk enabled device down
    rpc Shutdown (google.protobuf.Empty) returns (ManagementResponse);
    // Reboots the entire emt_sdk reboot device
    rpc Reboot (google.protobuf.Empty) returns (ManagementResponse);
    // Starts the main ipw service
    rpc Start (StartRequest) returns (ManagementResponse);
    // Stops the main ipw service
    rpc Stop (google.protobuf.Empty) returns (ManagementResponse);
    // Request contents of the main log file, like the Unity log.
    rpc GetLogs (LogsRequest) returns (LogsResponse);
    // Request status of all *relevant* services running on the machine.
    rpc GetServiceStatus (ServiceStatusRequest) returns (ServiceStatusResponse);

    // TODO: define the rest of the diagnostic service as per development discussion.
}

message LogsRequest {
    // How many lines from the end of the log to request.
    optional int32 lines = 1;
}

message LogsResponse {
    repeated string log_line = 1;
}

message ServiceStatusRequest {
    // Empty, but can be expected to grow later when
    // the request gets better defined.
}

message ServiceStatusResponse {
    enum ServiceStatus {
        SERVICE_STOPPED = 0;
        SERVICE_RUNNING = 1;
        SERVICE_CRASHED = 2;
    }
    message Service {
        string service_name = 1;
        ServiceStatus status = 2;
    }
    repeated Service services = 1;
}

message StartRequest {
    // Whether the started application should mute itself on startup
    bool mute_audio = 1;
}

message ManagementResponse {
    enum DeviceStatus {
        OK = 0;
        ERROR = 1;
    }
    DeviceStatus device_status = 1;
}