syntax = "proto3";
package naki3d.common.protocol;

message Resource {
  oneof data {
    Scene3D scene = 1;
    Model3D model = 2;
    Image image = 3;
    Video video = 4;
    Panorama panorama = 7;
  }
  string input_mapping = 5; // Probably JSON, we've agreed there's no point in binding it on protobuf layer
  repeated EventScript additional_scripts = 6;
}

message Model3D {
  bytes gltf = 1; // GLTF contains models, composition, textures, everything sould be contained
}

message Image {
  repeated bytes images = 1;
  enum Presentation {
    SLIDESHOW = 0;
    PAN_ZOOM = 1;
  }
  Presentation image_presentation = 2;
}

message Video {
  bytes data = 1; // Separate audio/video streams maybe?
  enum VideoCodec {
    VP9 = 0;
    AV1 = 1;
  }
  enum AudioCodec {
    OPUS = 0;
  }
  VideoCodec video_codec = 2;
  AudioCodec audio_codec = 3;
}

message Scene3D {
  Environment environment = 1;
  string datapack_id = 2;
  // alternatively
  //bytes datapack_payload = 2;

}

message Panorama {
  bytes data = 1; //Maybe separate panoramas for left/right eye in future
  //field 2 placeholder for left/right split
  double rotation_speed = 3;
  double camera_vertical_angle = 4;
}

message Environment {
  enum Engine {
    UNITY = 0; // The only initially supported option.
    //GODOT = 1;
    //UNREAL = 2;
    //CUSTOM = 3;
  }
  Engine engine_type = 1;
  string engine_version = 2;
  // Following could be added later to allow windows support.
  // We'd have to solve rebooting, running other content on win as well, etc.
  //enum OS {
  //  LINUX = 0;
  //  WINDOWS = 1;
  //}
  //OS target_os = 3;
}

message EventScript {
  string name = 1;
  string id = 3;
}
